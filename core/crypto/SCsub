#!/usr/bin/env python

Import("env")

env_crypto = env.Clone()

is_builtin = env["builtin_mbedtls"]
thirdparty_obj = []

if is_builtin:
    # Use our headers for builtin or if the module is not going to be compiled.
    # We decided not to depend on system mbedtls just for these few files that can
    # be easily extracted.
    env_crypto.Prepend(CPPPATH=["#thirdparty/mbedtls/include"])

else:
    env_mbed_tls.disable_warnings()
    mbedtls_thirdparty_dir = get_precompiled_static_lib_path(env, "mbedtls")
    env_mbed_tls.Append(CPPPATH=[mbedtls_thirdparty_dir + "include"])
    env.Append(LIBPATH=[mbedtls_thirdparty_dir + "lib"])
    env.Append(LINKFLAGS= [
       "mbedcrypto.lib",
       "mbedtls.lib",
       "mbedx509.lib",
    ])

# Godot source files

core_obj = []

env_crypto.add_source_files(core_obj, "*.cpp")
env.core_sources += core_obj

# Needed to force rebuilding the core files when the thirdparty library is updated.
env.Depends(core_obj, thirdparty_obj)
