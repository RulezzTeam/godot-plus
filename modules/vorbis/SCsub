#!/usr/bin/env python

Import("env")
Import("env_modules")

env_vorbis = env_modules.Clone()
ogg_thirdparty_dir = "#thirdparty-precompiled/libogg_x64-windows-static/"

# Thirdparty source files

thirdparty_obj = []

if env["builtin_libvorbis"]:
    thirdparty_dir = "#thirdparty/libvorbis/"
    thirdparty_sources = [
        # "analysis.c",
        # "barkmel.c",
        "bitrate.c",
        "block.c",
        "codebook.c",
        "envelope.c",
        "floor0.c",
        "floor1.c",
        "info.c",
        "lookup.c",
        "lpc.c",
        "lsp.c",
        "mapping0.c",
        "mdct.c",
        "psy.c",
        # "psytune.c",
        "registry.c",
        "res0.c",
        "sharedbook.c",
        "smallft.c",
        "synthesis.c",
        # "tone.c",
        # "vorbisenc.c",
        "vorbisfile.c",
        "window.c",
    ]

    thirdparty_sources = [thirdparty_dir + file for file in thirdparty_sources]

    env_vorbis.Prepend(CPPPATH=[thirdparty_dir])

    # also requires libogg
    if env["builtin_libogg"]:
        env_vorbis.Prepend(CPPPATH=["#thirdparty/libogg"])
    else:
        env_vorbis.Append(CPPPATH=[ogg_thirdparty_dir + "include"])

    env_thirdparty = env_vorbis.Clone()
    env_thirdparty.disable_warnings()
    env_thirdparty.add_source_files(thirdparty_obj, thirdparty_sources)
    env.modules_sources += thirdparty_obj

else:
    vorbis_thirdparty_dir = env.get_precompiled_static_lib_path("libvorbis")
    env_vorbis.Append(CPPPATH=[ogg_thirdparty_dir + "include"])
    env_vorbis.Append(CPPPATH=[vorbis_thirdparty_dir + "include"])
    env.Append(LIBPATH=[vorbis_thirdparty_dir + "lib"])
    env.Append(LINKFLAGS= [
       "vorbis.lib",
       "vorbisenc.lib",
       "vorbisfile.lib",
    ])


# Godot source files

module_obj = []

env_vorbis.add_source_files(module_obj, "*.cpp")
env.modules_sources += module_obj

# Needed to force rebuilding the module files when the thirdparty library is updated.
env.Depends(module_obj, thirdparty_obj)
